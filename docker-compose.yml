version: "3.8"

services:
  todo-redis:
    container_name: todo-redis
    image: redis:5.0.3
    ports:
      - 6379:6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  todo-postgres:
    container_name: todo-postgres
    build:
      context: ./todo-postgres
      dockerfile: Dockerfile.dev
    image: todo-postgres:1.0
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: todo1234
      POSTGRES_DB: todo
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo"]
      interval: 10s
      timeout: 5s
      retries: 5

  todo-elastic:
    container_name: todo-elastic
    image: elasticsearch:7.17.10
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    restart: unless-stopped
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  todo-api:
    container_name: todo-api
    build:
      context: ./todo-api
      dockerfile: Dockerfile.dev
    image: todo-api:1.0
    command: sh /app/start.sh
    ports:
      - 3000:3000
    environment:
      POSTGRES_HOST: todo-postgres
      POSTGRES_PORT: 5432
      POSTGRES_DATABASE: todo
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: todo1234
      REDIS_HOST: todo-redis
      REDIS_PORT: 6379
      ELASTICSEARCH_HOST: todo-elastic
      ELASTICSEARCH_PORT: 9200
    volumes:
      - ./todo-api:/app
      - /app/node_modules
    depends_on:
      todo-postgres:
        condition: service_healthy
      todo-redis:
        condition: service_healthy
      todo-elastic:
        condition: service_healthy
    restart: unless-stopped

  todo-view:
    container_name: todo-view
    build:
      context: ./todo-view
      dockerfile: Dockerfile.dev
    image: todo-view:1.0
    ports:
      - 4200:4200
    volumes:
      - ./todo-view:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - todo-api
    restart: unless-stopped

  todo-proxy:
    container_name: todo-proxy
    build:
      context: ./todo-proxy
      dockerfile: Dockerfile.dev
    image: todo-proxy:1.0
    ports:
      - 8080:80
    depends_on:
      - todo-api
      - todo-view
    restart: unless-stopped

volumes:
  postgres-data:
  elastic-data:
